{"version":3,"sources":["pages/SignIn.jsx","App.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","SignIng","useState","darkMode","setDarkMode","createMuiTheme","palette","type","styles","ThemeProvider","Container","component","maxWidth","CssBaseline","className","Switch","checked","onChange","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","value","Button","Grid","container","item","xs","Box","mt","App","SignIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVAeA,SAASA,IACL,OACI,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,SAAxD,UACK,iBACD,cAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,2BAA3B,sBAEQ,KACP,IAAIC,MAAOC,cACX,OAKb,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPN,UAAWF,EAAMG,QAAQ,EAAG,EAAG,IAEnCM,OAAQ,CACJC,OAAQV,EAAMG,QAAQ,EAAG,EAAG,QAmFrBQ,EA9EC,WAAO,IAAD,EACcC,oBAAS,GADvB,mBACXC,EADW,KACDC,EADC,KAGZd,EAAQe,YAAe,CACzBC,QAAS,CACLC,KAAMJ,EAAW,OAAS,WAI5BK,EAASpB,IACf,OACI,cAACqB,EAAA,EAAD,CAAenB,MAAOA,EAAtB,SACI,eAACoB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACI,cAACC,EAAA,EAAD,IACA,sBAAKC,UAAWN,EAAOjB,MAAvB,UACI,cAACwB,EAAA,EAAD,CAAQC,QAASb,EAAUc,SAAU,kBAAMb,GAAaD,MACxD,cAACvB,EAAA,EAAD,CAAY+B,UAAU,KAAK9B,QAAQ,KAAKE,MAAM,SAA9C,gCAGA,uBAAM+B,UAAWN,EAAOX,KAAMqB,YAAU,EAAxC,UACI,cAACC,EAAA,EAAD,CACItC,QAAQ,WACRmB,OAAO,SACPoB,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,qBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACT5C,MAAM,kBAEV,cAACqC,EAAA,EAAD,CACItC,QAAQ,WACRmB,OAAO,SACPoB,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHE,KAAK,WACLD,MAAM,gBACNhB,KAAK,WACLkB,aAAa,mBACb3C,MAAM,YAEV,cAAC6C,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAUC,MAAM,aAAahD,MAAM,YAC5CyC,MAAM,sCAEV,cAACQ,EAAA,EAAD,CACIxB,KAAK,SACLc,WAAS,EACTxC,QAAQ,YACRC,MAAM,UACNgC,UAAWN,EAAOT,OALtB,qBASA,eAACiC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAAb,SACI,cAACnD,EAAA,EAAD,CAAMC,KAAK,IAAIJ,QAAQ,QAAQC,MAAM,gBAArC,4CAIJ,cAACkD,EAAA,EAAD,CAAME,MAAI,EAAV,SACI,cAAClD,EAAA,EAAD,CAAMC,KAAK,IAAIJ,QAAQ,QAAQC,MAAM,gBAArC,0DAOhB,cAACsD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC1D,EAAD,Y,MC1GL2D,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAACyB,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa30eafc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createMuiTheme } from '@material-ui/core'\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright ©'}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                DarkSoft\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3, 0, 2),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}))\r\n\r\n\r\nconst SignIng = () => {\r\n    const [darkMode, setDarkMode] = useState(false);\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            type: darkMode ? 'dark' : 'light',\r\n        }\r\n    });\r\n\r\n    const styles = useStyles();\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={styles.paper}>\r\n                    <Switch checked={darkMode} onChange={() => setDarkMode(!darkMode)} />\r\n                    <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n                        COLEGIO SAN MIGUEL\r\n                    </Typography>\r\n                    <form className={styles.form} noValidate>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Correo Electronico\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            color=\"textSecondary\"\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            label=\"Contraseña\"\r\n                            type=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            color=\"primary\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"conditions\" color=\"primary\" />}\r\n                            label=\"Acepto los Terminos y Condiciones\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={styles.submit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\" color=\"textSecondary\">\r\n                                    Olvidaste tu contraseña ?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link href=\"#\" variant=\"body2\" color=\"textSecondary\">\r\n                                    No tienes una cuenta ? Registrate\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n                <Box mt={8}>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default SignIng","import SignIn from './pages/SignIn'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SignIn />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}